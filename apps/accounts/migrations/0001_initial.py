# Generated by Django 4.2.7 on 2024-01-14 17:35

import apps.accounts.manager
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(blank=True, choices=[('employee', 'Employee'), ('customer', 'Customer'), ('customer', 'Customer')], max_length=20, null=True, verbose_name='user type')),
                ('email', models.EmailField(max_length=100, unique=True, verbose_name='email address')),
                ('phone_number', models.CharField(max_length=11, unique=True, validators=[apps.accounts.manager.PhoneValidator], verbose_name='phone')),
                ('first_name', models.CharField(max_length=40, verbose_name='first name')),
                ('last_name', models.CharField(max_length=40, verbose_name='last name')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='birthday')),
                ('image', models.ImageField(blank=True, null=True, upload_to='users_profile_pics/', verbose_name='image')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='date updated')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='delete status')),
                ('deleted_at', models.DateTimeField(auto_now=True, null=True, verbose_name='date deleted')),
                ('restored_at', models.DateTimeField(auto_now=True, null=True, verbose_name='date restored')),
                ('is_active', models.BooleanField(default=True, verbose_name='active status')),
                ('city', models.CharField(max_length=30, verbose_name='city')),
                ('province', models.CharField(max_length=30, verbose_name='province')),
                ('complete_address', models.TextField(max_length=200, verbose_name='complete address')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL, verbose_name='customer')),
            ],
            options={
                'verbose_name': 'address',
            },
        ),
    ]
